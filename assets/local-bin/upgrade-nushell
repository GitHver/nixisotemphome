#! /usr/bin/env nu

# Script start.
def main [arg1] {
    # Check the arguments and assign the `level` variable accordingly.
    let level = match $arg1 {
        "user" => {3},
        "system" => {1},
        "all" => {2},
        _ => {
            print $"invalid argument: ($arg1)"
            exit 1
        },
    }
    # All values below 3 update the system config.
    if $level < 3 {
        if (sudo true) == false {
            print "aborting upgrade"
            exit 2
        }
        actions $"($env.HOME)/Nix/nixos-config" system
    }
    # All values above 1 update the user config.
    if $level > 1 {
        actions $"($env.HOME)/Nix/home-manager" user
    }
    # All done!
    print "done!"
}

# The execution order for the update process
def actions [path word] {
    # Go into the directory containing the flake (needed for git commands).
    cd $path

    # This checks if you have unsaved changes anywhere and aborts if there are any.
    let changes = (git diff)
    if $changes != "" {
        print $"you have unsaved changes in your ($word) config"
        return 3
    }

    # Checks if anything was actually updated. If not, then exit with a success.
    let flakebefore = (open flake.lock)
    git pull | ignore
    nix flake update #| ignore
    let flakeafter = (open flake.lock)
    if $flakebefore == $flakeafter {
        print $"no updates available for your ($word)"
        return 4
    }

    # Execute The relevant command.
    match $word {
        "user" => { home-manager switch },
        "system" => { sudo nixos-rebuild switch },
    }

    # If the updated build failed, then revert the `flake.lock`.
    # Else commit the changes
    if $env.LAST_EXIT_CODE != 0 {
        git checkout HEAD flake.lock
    } else {
        git add .
        git commit -m 'update'
        git push
    }
}

def check_sudo [] {
    if (id -u) == 0 {
        print "do not use this command with sudo, it will call for root itself"
        exit 3
    } else if (sudo true) == false {
        print "aborting upgrade"
        exit 4
    }
}
